{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let UserService = /*#__PURE__*/(() => {\n  class UserService {\n    constructor(http) {\n      this.http = http;\n      this.baseUrl = \"http://localhost:8080/user\";\n    }\n    //below should ALL mirror what is on the UserResource.java file (on the backend) as what each does, and the url it returns and .get, .post, etc.\n    //returns all users at http://localhost:8080/user/all\n    getAllUsers() {\n      return this.http.get(this.baseUrl);\n    }\n    //get one single user\n    getUser() {\n      return this.http.get(`${this.baseUrl}`);\n    }\n    //add user; returns only that User object, instead of an array\n    addUser(user) {\n      return this.http.post(this.baseUrl, user);\n    }\n    updateUser(user) {\n      return this.http.put(`${this.baseUrl}/update`, user);\n    }\n    //delete user by id; void as it's returning nothing\n    deleteUser(userId) {\n      return this.http.delete(`${this.baseUrl}/delete/${userId}`);\n    }\n    checkUsername(username) {\n      return this.http.post(`${this.baseUrl}/confirm/username`, username);\n    }\n    checkEmail(email) {\n      return this.http.post(`${this.baseUrl}/confirm/email`, email);\n    }\n    getUserInfo(username) {\n      return this.http.get(`${this.baseUrl}/${username}`);\n    }\n    getUserId(id) {\n      return this.http.get(`${this.baseUrl}/search/${id}`);\n    }\n  }\n  UserService.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  UserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n  return UserService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}